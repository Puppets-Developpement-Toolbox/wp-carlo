fieldset{
	border: 0;
	margin-bottom: 3.6rem;
	width: 100%;
  
	legend{
		margin: 0 0 2.4rem 0;
		padding: 0;
		font-weight: 700;
	}
}

/* masquer outline chrome et croix/fermer IE sur input*/
input:focus,
select:focus,
textarea:focus {
	outline: none;
}
input::-ms-clear {
	display: none;
}

/* habillage input text */
input[type=text],
input[type=number],
input[type=tel],
input[type=email],
input[type=date],
input[type=password] {
	color: $inputColor;
	font-family: $regularFont;
	font-size: $fontSize;
	font-weight: 400;
	height: auto; //$inputHeight;
	line-height: $inputHeight;
	width: 100%;
	vertical-align: middle;
	display: inline-block;
	padding: 0 $inputPadding 0 $inputPadding;
	border-radius: $radius;
	//background: $inputBgColor;
	
	&::-webkit-validation-bubble-message {
		display:none;
	} 
	&:x-moz-errormessage{
		display:none;
	}
	
	&:focus{
    color: $inputFocusColor;
		background-color: $inputFocusBgColor;
    border-color: $inputFocusBorderColor;
	}
	
	label{
		pointer-events: none;
		font-weight: 700;
    position: absolute !important;
    left: -100000px !important;
    top: -10000px !important;
    right: auto !important;
    bottom: auto !important;
	}
}
input[type='date']{
	position: relative;
	&::-webkit-calendar-picker-indicator {
		//force chrome to open calendar when clicking on the whole input
		//increase default picker to 100% size of the input and make it transparent
		position: absolute;
		z-index: 2;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width: auto;
		height: auto;
		color: transparent;
		background: transparent;
	}
	&::-webkit-clear-button {
		position: absolute;
		z-index: 3;
		right: 0;
	}
}
/* masquer flèches type number */
/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

/* Chrome */
input::-webkit-inner-spin-button,
input::-webkit-outer-spin-button { 
	-webkit-appearance: none;
	margin:0;
}

/* Opéra*/
input::-o-inner-spin-button,
input::-o-outer-spin-button { 
	-o-appearance: none;
	margin:0
}

/* habillage textarea */
textarea {
	font-size: $fontSize;
	color: $inputColor;
	font-family: $regularFont;
  border: 0;
  border-right: $borderWidth solid $inputBorderColor;
  border-bottom: $borderWidth solid $inputBorderColor;
	//border: $borderWidth solid $inputBorderColor;
	width: 100%;
	height: 15rem;
	padding: $inputPadding;
	overflow: hidden;
	background: $inputBgColor;
	display: block;
	border-radius: $radius;
	outline: none;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  resize: none; /*remove the resize handle on the bottom right*/
	
	&:focus{
		color: $inputFocusColor;
		border-color: $inputFocusBorderColor;
    background-color: $inputFocusBgColor;
	}
}

/* habillage checkbox */
input[type=checkbox] {
	display: none;
}
input[type=checkbox] + span{ 
	font-size: 1.6rem; //$fontSize;
	font-weight: 400;
	line-height: 1.3;//$inputHeight;
	margin-right: 3.6rem;
	vertical-align: middle;
	display: inline-block;
	position: relative;
	padding-left: 3rem;
	cursor: pointer;
}
input[type=checkbox]:focus + span {
  outline: none;
}
input[type=checkbox] + span:focus {
  outline: none;
}
input[type=checkbox] + span:before { 
	content: '';
	width: 2rem;
	height: 2rem;
	border: .2rem solid $checkboxColor;
	border-radius: 1rem;//$borderRadius;
	background: transparent;
	position: absolute;
	left: 0;
	top: 0;
	transition: opacity $speed2 $defaultEase, background $speed2 $defaultEase, border $speed2 $defaultEase;
}
input[type=checkbox] + span:after { 
	content: url(img/checked.svg);
	width: 2rem;
	height: 2rem;
	border-radius: 0;
	background: transparent;
	position: absolute;
	left: 0;
	top: 0;
	opacity: 0;
	transition: opacity $speed2 $defaultEase;
}
input[type=checkbox]:checked + span:before {
	//background: $checkboxColor !important;
	border-color: $checkboxColor !important;
}
input[type=checkbox]:checked + span:after {
	opacity: 1;
}

/* habillage radio */
input[type=radio] {
	display: none;
}
input[type=radio] + label{ 
	font-size: 1.6rem; //$fontSize;
	font-weight: 400;
	line-height: 1.3; //$inputHeight;
	margin-right: 3.2rem;
  margin-bottom: 3.2rem;
	vertical-align: middle;
	display: inline-block;
	position: relative;
	padding-left: 3rem;
	cursor: pointer;
}
input[type=radio]:focus + label {
  outline: none;
}
input[type=radio] + label:focus {
  outline: none;
}
input[type=radio] + label:before { 
	content: '';
	width: 2rem;
	height: 2rem;
	border: .2rem solid $checkboxColor;
	border-radius: 50%;
	position: absolute;
	left: 0;
	top: 50%;
	transform: translateY(-50%);
	transition: opacity $speed2 $defaultEase, background $speed2 $defaultEase;
}
input[type=radio] + label:after { 
	content: '';
	width: 1.4rem;
	height: 1.4rem;
	border-radius: 50%;
	background: $checkboxColor;
	position: absolute;
	left: .3rem;
	top: 50%;
	transform: translateY(-50%);
	opacity: 0;
	transition: opacity $speed2 $defaultEase;
}
input[type=radio]:checked + label:after {
	opacity: 1;
}

/* submit and reset */
input[type=submit],
input[type=reset]{
	cursor: pointer;
	display: inline-flex;
  justify-content: flex-start;
  align-items: center;
  border: $borderWidth solid $black;
	border-radius: $borderRadiusBtn-mobile;
	color: $white;
	background: $black;
	font-family: $btnFont;
	text-decoration: none;
	font-size: 1.6rem;
  font-weight: 400;
	padding: 2rem 2.4rem;
	transition: background $speed2 $defaultEase, color $speed2 $defaultEase, border $speed2 $defaultEase;
	margin-top: auto;
  margin-bottom: 3.2rem;
	//width: 100%;
	position: relative;
	text-align: left;
	-webkit-appearance: none;
	
	&:hover{
		background-color: $black;
		border-color: $black;
  }
  
	&.inactive {
    background-color: $greyLight;
    border-color: $greyLight;
    color: $grey;
    pointer-events: none;
    
    &:hover {
      background-color: $greyLight;
      border-color: $grey;
    }
  }
  
	&.error{
		background: $errorColor !important;
		border-color: $errorColor !important;
		color: $white !important;
	}
}

// select 
.form-type-select {
  background-color: transparent;
  height: auto;//$inputHeight;
  display: block;
  cursor: pointer;
  width: 100%;
  position: relative;
  font-weight: 400;
  font-size: $fontSize;
  font-family: $regularFont;
  text-align: left;
  margin-bottom: $inputPadding;
  outline: none;
  position: relative;
  
  label{
    &.js-form-required{
      &:after{
        content: '*';
        display: inline-block;
        margin-left: .5rem;
      }
    }
  }
  
  label {
    color: $labelColor;
    padding-left: $inputPadding;
    margin-bottom: .5rem;
    font-weight: 700;
  }
    
  select {
    // A reset of styles, including removing the default dropdown arrow
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    // Additional resets for further consistency
    background: transparent url(img/arrow-bottom-blueDark.svg) no-repeat calc(100% - 1.6rem) 50%;
    padding: 0 $inputPadding 0 $inputPadding;
    margin: 0;
    width: 100%;
    font-family: inherit;
    font-size: inherit;
    cursor: inherit;
    line-height: $inputHeight;
    height: $inputHeight;
    border-radius: $radius;
    border: $borderWidth solid $inputBorderColor;
    color: $labelColor;
  }
  
  &:focus-within{
    label{
      color: $labelFocusColor;
    }
    select{
      border-color: $inputFocusBorderColor;
      background-color: $inputHoverBgColor;
    }
  }
  
  &.filled{
    label{
      color: $labelFilledColor;
      /* label inside
      transform: translate(-$inputPadding, $labelFilledPoz) scale(.8); */
      background: transparent;
    }
    select{
      border-color: $inputFilledBorderColor;
    }
    .js-Dropdown-title{
			border-color: $inputFilledBorderColor;
		}
  }
  
  &.error,
  &.form-item--error{
    label{
      color: $errorColor;
      /* label inside
      transform: translate(-$inputPadding, $labelFilledPoz) scale(.8); */
      background: transparent;
    }
    select{
      border-color: $errorColor;
    }
    .js-Dropdown-title {
      color: $errorColor;
      border-color: $errorColor;
    }
  }
  
  &:hover {
    
    label {
      color: $labelHoverColor;
    }
    
		select{
			border-color: $inputHoverBorderColor;
      background-color: $inputHoverBgColor;
		}
    .js-Dropdown-title{
			border-color: $inputHoverBorderColor;
			background-color: $inputHoverBgColor;
		}
  }
  
  .error--message{
    margin-bottom: 0;
    font-size: 1.2rem;
  }
}
// fin select 

@media (min-width: $mobile){
	input[type=text],
	input[type=number],
	input[type=tel],
	input[type=email],
	input[type=date],
	input[type=password],
	textarea {
		width: auto;
	}
}

/* SPECIAL CONTAINERS */
.form-type-textarea{
	display: inline-block;
	vertical-align: top;
	position: relative;
	width: 100%;
	border-radius: $radius;
	margin-top: 1.6rem;
	margin-bottom: 1.6rem;
	
  textarea{
    width: 100%;
  }
  
	&.error{
		label{
			color: $errorColor !important;
		}
		textarea{
			border-color: $errorColor !important;
			color: $errorColor !important;
		}
    &::placeholder {
      color: $errorColor;
      opacity: 1;
    }
	}
	
	label{
    display: block;
		font-size: $fontSize;
		font-weight: 700;
		color: $labelColor;
		transition: transform $speed2 $defaultEase;
    padding-left: $inputPadding;
    
    position: absolute !important;
    left: -100000px !important;
    top: -10000px !important;
    right: auto !important;
    bottom: auto !important;
	}
	
  &:hover {
    label {
      color: $labelHoverColor;
    }
    
		textarea{
			border-color: $inputHoverBorderColor;
      background-color: $inputHoverBgColor;
      color: $inputColor;
		}
  }
  
	&.focus{
		label{
			color: $labelFocusColor;
		}
	}
	
	&.filled{
    textarea {
      border-color: $inputFilledBorderColor;
      color: $inputFilledColor;
    }
		label{
			color: $labelFilledColor;
		}
	}
  
}

.form-type-textfield{
	display: inline-block;
	vertical-align: top;
	position: relative;
	width: 100%;
	//min-width: 30rem;
	height: auto; //$inputHeight;
	border-radius: $radius;
	margin-bottom: 1.6rem;
	
	label{
    padding-left: $inputPadding;
    margin-bottom: .5rem;
		font-size: $fontSize;
		font-weight: 700;
		color: $labelColor;
    display: block;
    
    position: absolute !important;
    left: -100000px !important;
    top: -10000px !important;
    right: auto !important;
    bottom: auto !important;
	}
	
	input{
		background-color: $inputBgColor;
    border: 0;
		border-bottom: $borderWidth solid $inputBorderColor;
    //border: $borderWidth solid $inputBorderColor;
    border-radius: $radius;
		width: 100%;
		height: $inputHeight;
		color: $inputColor;
		font-size: $fontSize;
		padding: 0 $inputPadding 0 $inputPadding;
		
		&:focus{
			color: $inputFocusColor;
			background-color: $inputFocusBgColor;
			border-color: $inputFocusBorderColor;
		}
	}
	
	&.input-date{
		&:after{
			//content: url(img/calendar-blue.svg);
			position: absolute;
			right: $inputPadding;
			top: 50%;
      // label inside
			transform: translateY(-50%);
			pointer-events: none;
			z-index: -1;
		}
		&.focus{
			
			&:after{
				//content: url(img/calendar-green.svg); //no image
			}
		}
		
		&.error{
			color: $errorColor !important;
			&:after{
				//content: url(img/calendar-red.svg);
			}
		}
		
		.reset{
			background: url(img/close-input.svg) no-repeat 50% 50%;
			position: absolute;
      z-index: 10;
			right: 1rem;
			top: 50%;
			transform: translateY(-50%);
			width: 1rem;
			height: 1rem;
			text-decoration: none;
			display: none;
		}
		
		&.filled:hover{
			.reset{
				display: block;
			}
		}
	}
  
	&.input-time{
		label{
			//color: transparent !important;
      z-index: 20;
		}
    input[type=time]::-webkit-inner-spin-button,
    input[type=time]::-webkit-outer-spin-button {
      -webkit-appearance: none;
    }

    input[type=time] {
      -moz-appearance: textfield;
      background: transparent;
    }
    
		.reset{
			background: url(img/close-input.svg) no-repeat 50% 50%;
			position: absolute;
      z-index: 10;
			right: 1rem;
			top: 50%;
			transform: translateY(-50%);
			width: 1rem;
			height: 1rem;
			text-decoration: none;
			display: none;
		}
		
		&.filled:hover{
			.reset{
				display: block;
			}
		}
	}
  
	&.focus{
		label{
			color: $labelFocusColor;
		}
		input{
			color: $inputFocusColor;
			border-color: $inputFocusBorderColor;
      background-color: $inputFocusBgColor
		}
	}
	
	&.filled{
		label{
			color: $labelFilledColor;
		}
		input{
			color: $inputFilledColor;
			border-color: $inputFilledBorderColor;
      background-color: $inputFilledBgColor
		}
	}
  
	&.error{
		label{
			color: $errorColor !important;
		}
		input{
			border-color: $errorColor !important;
			color: $errorColor !important;
      &::placeholder {
        color: $errorColor;
        opacity: 1;
      }
		}
	}
	
	&:hover{
    
    label {
      color: $labelHoverColor;
    }
    
		input{
			border-color: $inputHoverBorderColor;
      background: $inputHoverBgColor !important;
      color: $inputColor;
		}
	}
}

.device-android,
.device-ios{
  .form-type-textfield{
		&.input-date{
			label{
				color: $inputColor !important;
			}
			
			&:focus{
				color: $inputFocusColor;
			}
			
			&.error{
				label{
					color: $errorColor !important;
				}
			}
			
			&.focus{
				label{
					color: $labelFocusColor;
          /* label inside
					transform: translateY(-130%) scale(.8); */
				}
			}
			
			&.filled{
				label{
					color: $inputColor;
					/* label inside
					transform: translateY(-130%) scale(.8); */
				}
			}
		}
	}
}
.device-android{
  .form-type-textfield{
		&.input-date{
			input{
				padding-top: .8rem;
			}
		}
	}
}

.form-type-checkbox{
	display: inline-block;
	vertical-align: top;
	//height: $inputHeight;
	width: 100%;
	
	@include tablet-to-large{
		width: auto;
	}
	
  &.error{
    label{
      color: $errorColor !important;
    }
    input[type=checkbox] + label:before { 
      border-color: $errorColor !important;
    }
  }
  
  &:checked{
    label{
      color: $blue;
    }
    input[type=checkbox] + label:before { 
      border-color: $blue;
    }
  }
}

.js-form-type-radios{
	display: inline-block;
	vertical-align: top;
	height: auto;
	width: 100%;
	
	@include tablet-to-large{
		width: auto;
	}
	
	.legend{
		margin-bottom: .8rem;
		font-size: 1.4rem;
		font-weight: 500;
	}
	
	label{
		//height: $inputHeight;
	}
	
	&.error{
	
		.legend{
			color: $errorColor !important;
		}
		
		input[type=radio] + label{
			color: $errorColor;
			
			&:before { 
				border-color: $errorColor !important;
			}
		}
	}
}



form{
	.infos{
		width: 100%;
		font-size: 1.2rem;
		//font-family: $messageFont;
		//opacity: .5;
		margin-bottom: 0;
    margin-top: .5rem;
		text-align: left;
    padding-left: $inputPadding;
	
    &.error{
      margin-top: 1rem;
      color: $errorColor;
      border-radius: .8rem;
      width: 100%;
      padding: .5rem $inputPadding .5rem 3rem;
      background: rgba($errorColor, .3) url(img/form-error.svg) no-repeat 1rem 50%;
      &:empty {
        display: none;
      }
    }
	
    &.success{
      margin-top: 1rem;
      color: $black;
      border-radius: .8rem;
      width: 100%;
      padding: .5rem $inputPadding .5rem 3rem;
      background: rgba($black, .3) url(img/form-success.svg) no-repeat 1rem 50%;
      &:empty {
        display: none;
      }
    }
	}
}

.submit-error{
	margin-top: 1.6rem;
	font-size: $fontSize;
	font-family: $messageFont;
	color: $errorColor;
}

/* detect autofill hack */
input,
select,
textarea {
	transition: filter 50000s;

	&:-webkit-autofill {
		animation-duration: 50000s;
		animation-name: onautofillstart;
	}

	&:not(:-webkit-autofill) {
		animation-duration: 50000s;
		animation-name: onautofillcancel;
	}
}

@-webkit-keyframes onautofillstart { from {} }
@-webkit-keyframes onautofillcancel { from {} }

@keyframes onautofillstart { from {} }
@keyframes onautofillcancel { from {} }

$labelFilledPoz: -190%; //-$inputHeight + 2
.label-inside {

  .form-type-textarea{

    label{
      position: absolute;
      left: $inputPadding;
      top: $inputPadding;
    }

    &.focus{
      label{
        transform: translate(-$inputPadding, -4.2rem) scale(.8);
      }
    }
    
    &.filled{
      label{
        transform: translate(-$inputPadding, -4.2rem) scale(.8);
      }
    }
  }

  .form-type-textfield,
  .form-type-email{
    margin-top: 2rem; //place pour le label
    
    label{
      position: absolute;
      left: $borderWidth;
      top: calc(#{$inputHeight} / 2);
      transform: translateY(-50%);
      transform-origin: 0 50%;
      transition: transform $speed2 $defaultEase;
      pointer-events: none; 
    }
    
    &.input-date{
      label{
        z-index: 20;
        background: $white;
        width: 100%;
      }
    }
    
    &.focus{
      label{
        transform: translate(-$inputPadding, $labelFilledPoz) scale(.8);
      }
    }
    
    &.error,
    &.form-item--error{
      label{
        transform: translate(-$inputPadding, $labelFilledPoz) scale(.8); // no label up when input empty
      }
    }
    
    &.filled{
      label{
        transform: translate(-$inputPadding, $labelFilledPoz) scale(.8);
      }
    }
  }
  .device-android,
  .device-ios{
    .form-type-textfield{
      &.input-date{
        
        &.focus{
          label{
            transform: translateY($labelFilledPoz) scale(.8);
          }
        }
        
        &.filled{
          label{
            transform: translateY($labelFilledPoz) scale(.8);
          }
        }
      }
    }
  }
  //simple select 
  .form-type-select {
    margin-top: 2rem; //place pour le label
    display: inline-block;
    
    label{
      position: absolute;
      z-index: 10;
      left: $borderWidth;
      top: calc(#{$inputHeight} / 2);
      transform-origin: 0 50%;
      transform: translateY(-50%);
      transition: transform $speed2 $defaultEase;
      width: calc(100% - 3rem);
      background: $white;
      padding-left: $inputPadding;
      pointer-events: none; 
    }
    
    &:focus-within{
      label{
        transform: translate(-$inputPadding, $labelFilledPoz) scale(.8);
        background: transparent; 
      }
    }
    
    &.filled{
      label{
        transform: translate(-$inputPadding, $labelFilledPoz) scale(.8);
      }
    }
    
    &.error,
    &.form-item--error{
      label{
        transform: translate(-$inputPadding, $labelFilledPoz) scale(.8);
      }
    }
  }
}
